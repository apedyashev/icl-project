version: '3'
services:
  broker-service:
    build: 
      context: ./../icl-broker-service
      dockerfile: ./../icl-broker-service/broker-service.dockerfile
    restart: always
    ports: 
      - "8080:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      JWT_SECRET: jde^7dslcdcd
      AUTH_SRVS_GRPC_ADDR: "auth-service:50001"

  auth-service:
    build: 
      context: ./../icl-auth-service
      dockerfile: ./../icl-auth-service/auth-service.dockerfile
    restart: always
    ports: 
      - "8081:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: devpassword
      DB_NAME: jwt_demo
      DB_PORT: 3306
      API_SECRET: supersecretkey
      GRPC_PORT: 50001

  posts-service:
    build: 
      context: ./../icl-posts-service
      dockerfile: ./../icl-posts-service/posts-service.dockerfile
    restart: always
    ports: 
      - "8082:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: posts

  images-service:
    build: 
      context: ./../icl-images-service
      dockerfile: ./../icl-images-service/images-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    # environment:
    #   DB_HOST: postgres
    #   DB_PORT: 5432
    #   DB_USER: postgres
    #   DB_PASSWORD: password
    #   DB_NAME: posts

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: posts
    volumes:
      - ./db-data/postgres/data/:/var/lib/postgresql/data/

  mysql:
    image: 'mysql/mysql-server:8.0.32-1.2.11-server'
    ports:
      - "3306:3306"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MYSQL_ROOT_PASSWORD: devpassword
      MYSQL_ROOT_HOST: '%'
      MYSQL_DATABASE: jwt_demo
    volumes:
      - ./db-data/mysql/:/var/lib/mysql

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: images
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db
